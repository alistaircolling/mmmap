<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:local="*"
			   creationComplete="creationCompleteHandler(event)"
			   currentState="login" minWidth.portal="955" minWidth.State1="955" minWidth.loggingIn="955" minHeight.portal="600" minHeight.State1="600" minHeight.loggingIn="600">
	<s:states>
		<s:State name="State1"/>
		<s:State name="portal"/>
		<s:State name="login"/>
		<s:State name="loggingIn"/>
	</s:states>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:ArrayCollection id="productList">
			<!--		<s:source>
				<fx:Array>
				<fx:Object label="Stop sign" icon="@Embed('images/stopSign.jpg')" data="85" />
					<fx:Object label="Go Sign" icon="@Embed('images/goSign.jpg')" data="48" />
					<fx:Object label="Rocks falling" icon="@Embed('images/goSign.jpg')" data="48" />
					<fx:Object label="Roadworks" icon="@Embed('images/goSign.jpg')" data="48" />
					<fx:Object label="speed bumps" icon="@Embed('images/goSign.jpg')" data="48" />
					<fx:Object label="Danger!" icon="@Embed('images/goSign.jpg')" data="48" />
					<fx:Object label="Slow Down" icon="@Embed('images/goSign.jpg')" data="48" />
				</fx:Array>
			</s:source>  -->
		</s:ArrayCollection>
		<s:ArrayCollection id="salesType">
			<s:source>
				<fx:Array>
					<fx:Object label="Sales" data="0" />
					<fx:Object label="Rental" data="1" />
					<fx:Object label="All" data="2" />
				</fx:Array>
			</s:source>
		</s:ArrayCollection>
		<s:ArrayCollection id="customerList">
			<!--<s:source>
				<fx:Array>
					<fx:Object label="John Ridley" data="85" />
					<fx:Object label="Gateshead Council" data="85" />
					<fx:Object label="Newcastle General Hospital" data="85" />
				</fx:Array>
			</s:source> -->
		</s:ArrayCollection>
		
	</fx:Declarations>
<fx:Script>
	<![CDATA[
		import model.Model;
		
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.events.FlexEvent;
		
		[Bindable]
		protected var startingDate:Date;
		[Bindable]
		protected var endingDate:Date;

		public var myModel:Model;
		
		
		private function showCustomers(d:*):void
		{
			//logic to parse data and sat arrayC  for combobox
		}
		
		private function showProducts(d:*):void
		{
			//logic to parse data and sat arrayC
			mapDisplay.showProducts(d);
			//TODO update combo box
		}
		
		private function showResults(d:*):void
		{
			mapDisplay.showResults(d);
		}
		
		
		private function validateDates():void
		{
			var sD:Date = startDateField.selectedDate;
			var eD:Date = endDateField.selectedDate;
			if (sD==null || eD==null ){
				showAlert("Please pick date range", "");
				return
			}
			if (eD.valueOf()<sD.valueOf()){
				showAlert("Please alter dates", "The end date must be after the start date"); 				
			}else{
				//make query string
				var  queryS:String = createQuery();
			}
		}
		public function showAlert(title:String, msg:String, okButton:Boolean = false, logO:Boolean = true):void
		{
			
			var alertFn:Function = logOut;
			if (!logO){
				alertFn = null;
			}
			//TODO add code to dictate if the OK button displays (progress msgs)
			Alert.show(msg, title, Alert.OK, this, alertFn);
			
		}
		private function logOut(a:*):void
		{
			trace("log out");
			currentState = "login";
		}
		
		
		private function requestData(event:Event):void
		{
			validateDates();	
		}
		private function createQuery():String		
		{		
			var sDate:Date = startDateField.selectedDate;
			var eDate:Date = endDateField.selectedDate;
			
			trace("---");
			var retS:String = eDate.toDateString();
			return eDate.toDateString();
		}

		protected function exportExcel_clickHandler(event:MouseEvent):void
		{
			// TODO Auto-generated method stub
			
		}


		protected function print_clickHandler(event:MouseEvent):void
		{
			// TODO Auto-generated method stub
		}


		protected function update_clickHandler(event:MouseEvent):void
		{
			// TODO Auto-generated method stub
			validateDates();
		}


		protected function login_clickHandler(event:MouseEvent):void
		{
			// TODO Auto-generated method stub
			currentState = "loggingIn";
			//model.login(username.text, password.text);
			myModel.logMeIn(username.text, password.text);
		}


		protected function creationCompleteHandler(event:FlexEvent):void
		{
			// TODO Auto-generated method stub
			trace("creation complete");	
	//		mapDisplay.init();			
			//TODO request customer lists from php and default filter settings
			myModel = new Model(this);
		}


		protected function logout_clickHandler(event:MouseEvent):void
		{
			username.text = "";
			password.text = "";
			// TODO Auto-generated method stub
			currentState = "login";
		}

	]]>
</fx:Script>
	<s:VGroup x="10" y="10" width="700" height="100%" includeIn="State1,portal">
		
			<s:Group width="700">
				<s:layout>
					<s:HorizontalLayout/>
				</s:layout>
				<s:Label text="Start date:"/>
				<mx:DateField id="startDateField"/>
				<mx:Spacer width="20"/>
				<s:Label text="End date:"/>
				<mx:DateField id="endDateField" />
				<mx:Spacer width="100"/>
				<s:Group width="700">
					<s:layout>
						<s:HorizontalLayout/>
					</s:layout>
					<s:Label text="Product:" />
					<s:ComboBox id="products" dataProvider="{productList}" labelField="name"/>
				</s:Group>
			</s:Group>
			<mx:Spacer height="30"/>
			<s:Group width="700">
				<s:layout>
					<s:HorizontalLayout/>
				</s:layout>
				<s:Label text="Sale type:"/>
				<s:ComboBox id="saleTypes" dataProvider="{salesType}"/>
				<mx:Spacer width="20"/>
				<s:Label text="Customer:"/>
				<s:ComboBox id="customers" dataProvider="{customerList}" labelField="name"/>
				<mx:Spacer width="20"/>
				<s:Button id="update" label="Update" right="0" click="update_clickHandler(event)"/>
			</s:Group>
			<mx:Spacer height="10"/>
			<s:Group x="300">
				<s:layout>
					<s:HorizontalLayout/>
				</s:layout>
				<s:Button id="exportExcel" label="Export Excel CSV" click="exportExcel_clickHandler(event)"/>
				<s:Button id="print" label="Print" click="print_clickHandler(event)"/>
				<s:Button label="Logout" id="logout" click.portal="logout_clickHandler(event)"/>
			</s:Group>
			<mx:Spacer height="30"/>
		<local:MapDisplay id="mapDisplay"/>
	</s:VGroup>
	<s:List id="productsLister" x="200" width="300" y="700"
			itemRenderer="HListRenderer" dataProvider="{productList}" labelField="name" includeIn="State1,portal">
		<s:layout>
			<s:HorizontalLayout/>
		</s:layout>
		
	</s:List>
	<s:Panel includeIn="loggingIn,login" width="250" height="200" horizontalCenter="-0" verticalCenter="0" title="Login">
		<s:TextInput y="35" width="200" horizontalCenter="-1" id="username" includeIn="login"/>
		<s:Label x="24" y="19" text="Username" includeIn="login"/>
		<s:Label x="24" y="69" text="Password" includeIn="login"/>
		<s:TextInput y="88" width="200" horizontalCenter="-1" id="password" includeIn="login" displayAsPassword="true"/>
		<s:Button x="88" y="126" label="Login" id="login" click="login_clickHandler(event)" includeIn="login" />
		<s:Label includeIn="loggingIn" text="Logging in....." horizontalCenter="0" verticalCenter="0"/>
	</s:Panel>
	
</s:Application>
